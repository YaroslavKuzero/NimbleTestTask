{"version":3,"sources":["Components/Input/Input.module.css","App.module.css","Components/CounterList/CounterList.module.css","Components/Counter/Counter.module.css","redux/actions.js","Components/Input/Input.js","Components/Counter/Counter.js","Components/CounterList/CounterList.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","addCounter","createAction","data","length","DateTime","now","toFormat","payload","id","nanoid","name","time","seconds","isTimerActive","snapShot","toSeconds","deleteCounter","updateCounter","TrackerNameInput","dispatch","useDispatch","useState","setName","changeHandler","useCallback","event","currentTarget","value","addCounterHandler","preventDefault","className","styles","form","onSubmit","input","type","placeholder","onChange","button","Counter","item","counter","setCounter","isActive","setIsActive","snapShotTik","setSnapshotTik","useEffect","Math","ceil","timerId","setInterval","prev","clearInterval","active","counterName","counterTime","Duration","fromObject","toISOTime","suppressMilliseconds","buttonsContainer","pause","play","onClick","delete","title","CounterList","counters","useSelector","state","counterList","map","App","app","header","createReducer","filter","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","countersReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d0118fbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__2LUVe\",\"input\":\"Input_input__7lbNE\",\"button\":\"Input_button__3niS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"header\":\"App_header__3ZZ1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterList\":\"CounterList_counterList__2tSL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1S9lq\",\"active\":\"Counter_active__38HId\",\"counterName\":\"Counter_counterName__23uK4\",\"counterTime\":\"Counter_counterTime__2rgbH\",\"buttonsContainer\":\"Counter_buttonsContainer__q27EB\",\"button\":\"Counter_button__3quuj\",\"delete\":\"Counter_delete__3UtOJ\",\"play\":\"Counter_play__azgeR\",\"pause\":\"Counter_pause__2OhQP\"};","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport { DateTime } from \"luxon\";\n\n\nconst addCounter = createAction('counter/add', data => {\n  if (data.length === 0) {\n    data = DateTime.now().toFormat('dd LL yyyy HH:mm:ss:ms')\n  }\n  return {\n    payload: {\n      id: nanoid(10),\n      name: data,\n      time: { seconds: 0 },\n      isTimerActive: true,\n      snapShot: DateTime.now().toSeconds()\n    },\n  }\n})\n\nconst deleteCounter = createAction('counter/delete');\nconst updateCounter = createAction('counter/update')\n\n\nexport { addCounter, deleteCounter, updateCounter }","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCounter } from '../../redux/actions';\nimport styles from './Input.module.css'\n\n\nexport default function TrackerNameInput() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n\n  const changeHandler = useCallback((event) => {\n    setName(event.currentTarget.value)\n  }, [])\n\n  const addCounterHandler = useCallback((event) => {\n    event.preventDefault();\n    dispatch(addCounter(name));\n    setName('')\n  }, [dispatch, name]);\n\n  return (\n    <form className={styles.form} onSubmit={addCounterHandler}>\n      <input className={styles.input} type=\"text\" placeholder=\"Enter tracker name\" name='name' value={name}\n        onChange={changeHandler}></input>\n      <button className={styles.button} type=\"submit\">GO</button>\n    </form>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteCounter, updateCounter, } from '../../redux/actions';\nimport { DateTime, Duration } from 'luxon'\nimport styles from './Counter.module.css';\n\nexport default function Counter({ item: { id, name, time, isTimerActive, snapShot } }) {\n  const dispatch = useDispatch();\n  const [counter, setCounter] = useState(time);\n  const [isActive, setIsActive] = useState(isTimerActive);\n  const [snapShotTik, setSnapshotTik] = useState(snapShot);\n\n  useEffect(() => {\n    const now = DateTime.now().toSeconds();\n    if (isActive) {\n      setCounter({ seconds: Math.ceil(now - snapShotTik + time.seconds) })\n    }\n  }, [])\n\n  useEffect(() => {\n    let timerId;\n    dispatch(updateCounter({ id, name, time: counter, isTimerActive: isActive, snapShot: snapShotTik }))\n    if (isActive) {\n      timerId = setInterval(() => {\n        setCounter(prev => { return { seconds: prev.seconds + 1 } }\n        );\n        setSnapshotTik(DateTime.now().toSeconds());\n      }, 1000)\n    };\n    return () => clearInterval(timerId)\n  }, [id, name, counter, isActive, snapShotTik, dispatch])\n\n  const isActivehandler = () => {\n    setIsActive(prev => !prev);\n  }\n\n\n  return (\n    <div className={isActive ? styles.counter + \" \" + styles.active : styles.counter}>\n      <p className={styles.counterName}>{name}</p>\n      <p className={styles.counterTime}>{Duration.fromObject(counter).toISOTime({ suppressMilliseconds: true })}</p>\n      <div className={styles.buttonsContainer}>\n        <button className={isActive ? styles.button + \" \" + styles.pause : styles.button + \" \" + styles.play} type='button' onClick={() => isActivehandler()}></button>\n        <button className={styles.delete + \" \" + styles.button} type='button' title='delete' onClick={() => dispatch(deleteCounter(id))}></button>\n      </div>\n    </div >\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport Counter from '../Counter';\n\nimport styles from './CounterList.module.css';\n\n\nexport default function CounterList() {\n  const counters = useSelector(state => state.counters)\n\n  return (\n    <ul className={styles.counterList}>\n      {counters.map(item => (<li key={item.id}><Counter item={item} />\n      </li>))}\n    </ul>\n  )\n}","import React from 'react'\nimport Input from './Components/Input';\nimport CounterList from './Components/CounterList';\nimport styles from './App.module.css'\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <h1 className={styles.header}>tracker</h1>\n      <Input />\n      <CounterList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { addCounter, deleteCounter, updateCounter } from \"./actions\";\n\nconst counters = createReducer([], {\n  [addCounter]: (state, { payload }) => [payload, ...state],\n  [deleteCounter]: (state, { payload }) => state.filter(item => item.id !== payload),\n  [updateCounter]: (state, { payload }) => state.map(item => {\n    if (item.id === payload.id) {\n      item = { ...payload }\n    }\n    return item;\n  })\n})\n\n\nexport default combineReducers({ counters });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport countersReducer from './reducers';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'counters',\n  storage: storage,\n}\nconst persistedReducer = persistReducer(persistConfig, countersReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\n\nconst persistor = persistStore(store)\n\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}